
<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36" version="26.2.15">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel grid="1" page="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Pd-dhC6Kyb1Zk-Jqie9X-0" target="Pd-dhC6Kyb1Zk-Jqie9X-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Pd-dhC6Kyb1Zk-Jqie9X-0" target="Pd-dhC6Kyb1Zk-Jqie9X-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-0" value="&lt;b&gt;Network Manager&lt;/b&gt;&lt;li class=&quot;&quot; data-end=&quot;324&quot; data-start=&quot;248&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;324&quot; data-start=&quot;250&quot;&gt;&lt;strong data-end=&quot;267&quot; data-start=&quot;250&quot;&gt;&lt;code data-end=&quot;265&quot; data-start=&quot;252&quot;&gt;StartHost()&lt;/code&gt;&lt;/strong&gt;: Starts the game as both the server and the host client.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;394&quot; data-start=&quot;325&quot;&gt;&lt;br&gt;&lt;p class=&quot;&quot; data-end=&quot;394&quot; data-start=&quot;327&quot;&gt;&lt;strong data-end=&quot;346&quot; data-start=&quot;327&quot;&gt;&lt;code data-end=&quot;344&quot; data-start=&quot;329&quot;&gt;StartClient()&lt;/code&gt;&lt;/strong&gt;: Connects the local player to a running server.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;459&quot; data-start=&quot;395&quot;&gt;&lt;br&gt;&lt;p class=&quot;&quot; data-end=&quot;459&quot; data-start=&quot;397&quot;&gt;&lt;strong data-end=&quot;416&quot; data-start=&quot;397&quot;&gt;&lt;code data-end=&quot;414&quot; data-start=&quot;399&quot;&gt;StartServer()&lt;/code&gt;&lt;/strong&gt;: Starts the server without a local player.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;521&quot; data-start=&quot;460&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;521&quot; data-start=&quot;462&quot;&gt;&lt;strong data-end=&quot;478&quot; data-start=&quot;462&quot;&gt;&lt;code data-end=&quot;476&quot; data-start=&quot;464&quot;&gt;Shutdown()&lt;/code&gt;&lt;/strong&gt;: Gracefully stops all networking activity.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;638&quot; data-start=&quot;522&quot;&gt;&lt;br&gt;&lt;p class=&quot;&quot; data-end=&quot;638&quot; data-start=&quot;524&quot;&gt;&lt;strong data-end=&quot;571&quot; data-start=&quot;524&quot;&gt;&lt;code data-end=&quot;569&quot; data-start=&quot;526&quot;&gt;OnClientConnectedCallback(ulong clientId)&lt;/code&gt;&lt;/strong&gt;: Triggered when a new player successfully connects to the session.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;740&quot; data-start=&quot;639&quot;&gt;&lt;br&gt;&lt;p class=&quot;&quot; data-end=&quot;740&quot; data-start=&quot;641&quot;&gt;&lt;strong data-end=&quot;689&quot; data-start=&quot;641&quot;&gt;&lt;code data-end=&quot;687&quot; data-start=&quot;643&quot;&gt;OnClientDisconnectCallback(ulong clientId)&lt;/code&gt;&lt;/strong&gt;: Triggered when a player disconnects or times out.&lt;/p&gt;&lt;/li&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-40" y="-660" width="210" height="690" as="geometry" />
        </mxCell>
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-1" value="&lt;h3 class=&quot;&quot; data-end=&quot;3037&quot; data-start=&quot;3008&quot;&gt;&lt;strong data-end=&quot;3037&quot; data-start=&quot;3012&quot;&gt;NetworkPrefabs(&lt;/strong&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 12px; font-weight: normal;&quot;&gt;The &lt;/span&gt;&lt;strong style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 12px;&quot; data-end=&quot;803&quot; data-start=&quot;794&quot;&gt;thing&lt;/strong&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 12px; font-weight: normal;&quot;&gt; that actually shows up in the game when a player joins.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 12px; font-weight: normal;&quot;&gt;Could be a cube, a kart, a character â€” anything.)&lt;/span&gt;&lt;/h3&gt;&lt;ul data-end=&quot;3124&quot; data-start=&quot;3038&quot;&gt;&lt;li class=&quot;&quot; data-end=&quot;3124&quot; data-start=&quot;3038&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;3124&quot; data-start=&quot;3040&quot;&gt;&lt;strong data-end=&quot;3058&quot; data-start=&quot;3040&quot;&gt;&lt;code data-end=&quot;3056&quot; data-start=&quot;3042&quot;&gt;PlayerPrefab&lt;/code&gt;&lt;/strong&gt;: Reference to the player kart prefab, used when spawning players&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;" style="ellipse;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="280" y="-20" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-2" value="&lt;b&gt;Player Spawner&lt;/b&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp;(&lt;/b&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Watches for new players joining,&amp;nbsp;&lt;/span&gt;&lt;strong style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; data-end=&quot;561&quot; data-start=&quot;535&quot;&gt;Spawns a player prefab&lt;/strong&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; (like a kart or cube) when someone connects,&amp;nbsp;&lt;/span&gt;&lt;strong style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; data-end=&quot;621&quot; data-start=&quot;609&quot;&gt;Despawns&lt;/strong&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; it when they leave)&lt;/span&gt;&lt;div&gt;&lt;ul data-end=&quot;1324&quot; data-start=&quot;809&quot;&gt;&lt;li class=&quot;&quot; data-end=&quot;918&quot; data-start=&quot;809&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;918&quot; data-start=&quot;811&quot;&gt;&lt;strong data-end=&quot;833&quot; data-start=&quot;811&quot;&gt;&lt;code data-end=&quot;831&quot; data-start=&quot;813&quot;&gt;OnNetworkSpawn()&lt;/code&gt;&lt;/strong&gt;: Called once this spawner is active on the network. Used to hook up event listeners.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;1014&quot; data-start=&quot;919&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;1014&quot; data-start=&quot;921&quot;&gt;&lt;strong data-end=&quot;968&quot; data-start=&quot;921&quot;&gt;&lt;code data-end=&quot;966&quot; data-start=&quot;923&quot;&gt;OnClientConnectedCallback(ulong clientId)&lt;/code&gt;&lt;/strong&gt;: When a player joins, trigger a player spawn.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;1118&quot; data-start=&quot;1015&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;1118&quot; data-start=&quot;1017&quot;&gt;&lt;strong data-end=&quot;1065&quot; data-start=&quot;1017&quot;&gt;&lt;code data-end=&quot;1063&quot; data-start=&quot;1019&quot;&gt;OnClientDisconnectCallback(ulong clientId)&lt;/code&gt;&lt;/strong&gt;: When a player leaves, clean up their player object.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;1230&quot; data-start=&quot;1119&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;1230&quot; data-start=&quot;1121&quot;&gt;&lt;strong data-end=&quot;1154&quot; data-start=&quot;1121&quot;&gt;&lt;code data-end=&quot;1152&quot; data-start=&quot;1123&quot;&gt;SpawnPlayer(ulong clientId)&lt;/code&gt;&lt;/strong&gt;: Instantiates the kart prefab for the joining player and assigns ownership.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;1324&quot; data-start=&quot;1231&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;1324&quot; data-start=&quot;1233&quot;&gt;&lt;strong data-end=&quot;1268&quot; data-start=&quot;1233&quot;&gt;&lt;code data-end=&quot;1266&quot; data-start=&quot;1235&quot;&gt;DespawnPlayer(ulong clientId)&lt;/code&gt;&lt;/strong&gt;: Destroys the kart object linked to the leaving player.&lt;/p&gt;&lt;br&gt;&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;" style="ellipse;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-580" y="80" width="610" height="600" as="geometry" />
        </mxCell>
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-3" value="&lt;b&gt;Player Network&lt;/b&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;(&lt;/b&gt;A small script attached to the PlayerPrefab,&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Confirms ownership (i.e., &quot;this is my player&quot; vs &quot;this is another player&quot;),&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Can be empty at first â€” just useful if you want to add stuff later.)&lt;/span&gt;&lt;li class=&quot;&quot; data-end=&quot;1357&quot; data-start=&quot;1288&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;1357&quot; data-start=&quot;1290&quot;&gt;&lt;strong style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; data-end=&quot;1415&quot; data-start=&quot;1393&quot;&gt;&lt;code data-end=&quot;1413&quot; data-start=&quot;1395&quot;&gt;OnNetworkSpawn()&lt;/code&gt;&lt;/strong&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: Runs when this player object spawns on the network. Used to activate input if local owner.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;div&gt;&lt;li class=&quot;&quot; data-end=&quot;1598&quot; data-start=&quot;1508&quot;&gt;&lt;br&gt;&lt;p class=&quot;&quot; data-end=&quot;1598&quot; data-start=&quot;1510&quot;&gt;&lt;strong data-end=&quot;1524&quot; data-start=&quot;1510&quot;&gt;&lt;code data-end=&quot;1522&quot; data-start=&quot;1512&quot;&gt;Update()&lt;/code&gt;&lt;/strong&gt;: Every frame, handle input or sync movement data, depending on ownership.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;1716&quot; data-start=&quot;1599&quot;&gt;&lt;br&gt;&lt;p class=&quot;&quot; data-end=&quot;1716&quot; data-start=&quot;1601&quot;&gt;&lt;strong data-end=&quot;1635&quot; data-start=&quot;1601&quot;&gt;&lt;code data-end=&quot;1633&quot; data-start=&quot;1603&quot;&gt;MoveServerRpc(Vector3 input)&lt;/code&gt;&lt;/strong&gt;: Remote Procedure Call â€” sends input from client to server to validate movement.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;1822&quot; data-start=&quot;1717&quot;&gt;&lt;br&gt;&lt;p class=&quot;&quot; data-end=&quot;1822&quot; data-start=&quot;1719&quot;&gt;&lt;strong data-end=&quot;1758&quot; data-start=&quot;1719&quot;&gt;&lt;code data-end=&quot;1756&quot; data-start=&quot;1721&quot;&gt;NetworkVariable&amp;lt;Vector3&amp;gt; Position&lt;/code&gt;&lt;/strong&gt;: Automatically replicates the player&#39;s position to all clients.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;&quot; data-end=&quot;1931&quot; data-start=&quot;1823&quot;&gt;&lt;p class=&quot;&quot; data-end=&quot;1931&quot; data-start=&quot;1825&quot;&gt;&lt;strong data-end=&quot;1867&quot; data-start=&quot;1825&quot;&gt;&lt;code data-end=&quot;1865&quot; data-start=&quot;1827&quot;&gt;NetworkVariable&amp;lt;Quaternion&amp;gt; Rotation&lt;/code&gt;&lt;/strong&gt;: Automatically replicates the player&#39;s rotation to all clients.&lt;/p&gt;&lt;/li&gt;&lt;/div&gt;&lt;/div&gt;" style="ellipse;whiteSpace=wrap;html=1;fillColor=#ffe6cc;strokeColor=#d79b00;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-50" y="380" width="920" height="640" as="geometry" />
        </mxCell>
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.324;entryY=0.051;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Pd-dhC6Kyb1Zk-Jqie9X-0" target="Pd-dhC6Kyb1Zk-Jqie9X-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-12" value="Green = necessary&lt;div&gt;orange = optional&amp;nbsp;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="520" y="-680" width="120" height="140" as="geometry" />
        </mxCell>
        <mxCell id="Pd-dhC6Kyb1Zk-Jqie9X-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=1;exitDx=0;exitDy=0;entryX=0.99;entryY=0.369;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Pd-dhC6Kyb1Zk-Jqie9X-1" target="Pd-dhC6Kyb1Zk-Jqie9X-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>


